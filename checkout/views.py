from django.shortcuts import render, redirect, reverse
from django.contrib import messages
from django.conf import settings
from .forms import OrderForm
from cart.contexts import cart_contents
import stripe


def checkout(request):
    """
    This function creates a Stripe PaymentIntent object for the total amount of the items in the user's
    cart.
    
    :param request: The request object represents the current HTTP request that the user has made
    :return: The code snippet does not have a return statement, so nothing is being returned. It is
    likely a part of a larger view function that handles the checkout process for an e-commerce website.
    """
    stripe_public_key = settings.STRIPE_PUBLIC_KEY
    stripe_secret_key = settings.STRIPE_SECRET_KEY

    cart = request.session.get('cart', {})
    if not cart:
        messages.error(request, "The cart is empty! Please add products!")
        return redirect(reverse('products'))

    cart = request.session.get('cart', {})
    if not cart:
        messages.error(request, "There's nothing in the cart")
        return redirect(reverse('products'))

    current_cart = cart_contents(request)
    total = current_cart['grand_total']
    stripe_total = round(total * 100)
    stripe.api_key = stripe_secret_key
    intent = stripe.PaymentIntent.create(
        amount=stripe_total,
        currency=settings.STRIPE_CURRENCY,
    )

    print(intent)
    # This code is rendering the checkout page with an order form, Stripe public key, and a client secret.
    # It first checks if the Stripe public key is missing and displays a warning message if it is. It then
    # creates an instance of the OrderForm and passes it to the context dictionary along with the Stripe
    # public key and the client secret generated by the Stripe PaymentIntent API. The context dictionary
    # is then passed to the checkout.html template for rendering.

    order_form = OrderForm()
    if not stripe_public_key:
        messages.warning(request, 'Stripe public key is missing.')
    template = 'checkout/checkout.html'
    context = {
        'order_form': order_form,
        'stripe_public_key': stripe_public_key,
        'client_secret': intent.client_secret,
    }

    return render(request, template, context)
